---
apiVersion: keda.sh/v1alpha1
kind: ScaledObject
metadata:
  name: keda-remeshworker-scaler
  labels:
    scaledobject.keda.sh/name: keda-remeshworker-scaler
  namespace: default
  annotations:
    scaledobject.keda.sh/transfer-hpa-ownership: "true"
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: remeshworker
  pollingInterval:  15
  cooldownPeriod:  1200
  # idleReplicaCount: 0
  minReplicaCount: ${REMESHWORKER_MIN_REPLICAS}  
  maxReplicaCount: ${REMESHWORKER_MAX_REPLICAS}
  # advanced:                                                 # Optional. Section to specify advanced options
  #   horizontalPodAutoscalerConfig:                          # Optional. Section to specify HPA related options
  #     name: remeshworker-scaler
  triggers:
  - type: gcp-pubsub
    metadata:
      mode: "SubscriptionSize" # Optional - Default is SubscriptionSize - SubscriptionSize or OldestUnackedMessageAge
      # aggregation: "sum" # Optional - Only meaningful for distribution-valued metrics
      value: "1" # Optional - Default is 10
      # activationValue: "1" # Optional - Default is 0
      subscriptionName: ${PYCHUNKEDGRAPH_LOW_PRIORITY_REMESH_QUEUE}
      credentialsFromEnv: GOOGLE_APPLICATION_CREDENTIALS_FILE  # Required
  # - type: memory
  #   metricType: Utilization # Allowed types are 'Utilization' or 'AverageValue'
  #   metadata:
  #     value: "75"
      # containerName: "" # Optional. You can use this to target a specific container in a pod
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: remeshworker
spec:
  replicas: ${REMESHWORKER_MIN_REPLICAS}
  selector:
    matchLabels:
      app: remeshworker
  template:
    metadata:
      labels:
        app: remeshworker
    spec:
      tolerations:
        - key: "pool"
          operator: "Equal"
          value: "${MESH_POOL}"
          effect: "NoSchedule"
      nodeSelector:
        cloud.google.com/gke-nodepool: ${MESH_POOL}
      volumes:
        - name: google-cloud-key
          secret:
            secretName: ${PYCG_SERVICE_ACCOUNT_SECRET}
      terminationGracePeriodSeconds: 20
      containers:
        - name: remeshworker
          image: ${DOCKER_REPOSITORY}/pychunkedgraph:v${PYCG_VERSION}
          imagePullPolicy: Always
          volumeMounts:
            - name: google-cloud-key
              mountPath: /root/.cloudvolume/secrets
          env:
            - name: GOOGLE_APPLICATION_CREDENTIALS
              value: /root/.cloudvolume/secrets/${GOOGLE_SECRET_FILENAME}
            - name: GOOGLE_APPLICATION_CREDENTIALS_FILE
              valueFrom:
                secretKeyRef:
                  name: ${PYCG_SERVICE_ACCOUNT_SECRET}
                  key: ${GOOGLE_SECRET_FILENAME}
            - name: REDIS_SERVICE_HOST
              value: ${REDIS_HOST}
            - name: REDIS_SERVICE_PORT
              value: "6379"
            - name: DAF_CREDENTIALS
              value: /root/.cloudvolume/secrets/${CAVE_SECRET_FILENAME}
            - name: REDIS_PASSWORD
              value: ${REDIS_PASSWORD}
            - name: PROTOCOL_BUFFERS_PYTHON_IMPLEMENTATION
              value: "upb"
            - name: ZSTD_THREADS
              value: "4"
            - name: APP_SETTINGS
              value: "pychunkedgraph.app.config.DevelopmentConfig"
            - name: PROJECT_ID
              value: ${DATA_PROJECT_NAME}
            - name: PROJECT_NAME
              value: ${PROJECT_NAME}
            - name: PYCHUNKEDGRAPH_REMESH_QUEUE
              value: ${PYCHUNKEDGRAPH_LOW_PRIORITY_REMESH_QUEUE}
            - name: PYCHUNKEDGRAPH_EDITS_EXCHANGE
              value: ${PYCHUNKEDGRAPH_EDITS_EXCHANGE}
            - name: BIGTABLE_PROJECT
              value: ${DATA_PROJECT_NAME}
            - name: BIGTABLE_INSTANCE
              value: ${BIGTABLE_INSTANCE_NAME}
          resources:
            requests:
              memory: 3000Mi
              cpu: 800m
            limits:
              memory: 4000Mi
              cpu: 1000m
          command:
            - /bin/sh
            - -c
            - python -m workers.mesh_worker
